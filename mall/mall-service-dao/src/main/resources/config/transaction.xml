<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/task
   		http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://code.alibabatech.com/schema/dubbo        
		http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
		
	<!-- 数据源druid -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${driverClassName}"/>
		<property name="url" value="${url}"/>
		<property name="username" value="${username}"/>
		<property name="password" value="${password}"/>
	</bean>


	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 1.注解管理事务 -->
<!-- 	<tx:annotation-driven transaction-manager="transactionManager" /> -->

	<!-- 2.声明式事务AOP+自动代理 -->
	
	<!-- 基于XML配置 -->
	<!-- 第一个 *  —— 通配 任意返回值类型  -->
	<!-- 第二个 *  —— 通配 包com.open98ep.service下的任意class  -->
	<!-- 第三个 *  —— 通配 包com.open98ep.service下的任意class的任意方法  -->
	<!-- 第四个 .. —— 通配 方法可以有0个或多个参数  -->
<!-- 	<aop:config> -->
<!-- 		<aop:pointcut expression="execution(* com.cxy.mall.service.*.*(..))" id="transactioncut" /> -->
<!-- 		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactioncut" /> -->
<!-- 	</aop:config> -->
	<!-- timeout:指定事务的超时 -->
	<!-- read-only:事务是否只读的 -->
	<!-- isolation:设定事务的隔离级别 -->
	<!-- propagation:设定事务定义所用的传播级别 NOT_SUPPORTED(不支持) REQUIRED(不必须) -->
<!-- 	<tx:advice id="txAdvice" transaction-manager="transactionManager"> -->
<!-- 		<tx:attributes> -->
<!-- 			<tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED" /> -->
<!-- 			<tx:method name="*" /> -->
<!-- 		</tx:attributes> -->
<!-- 	</tx:advice> -->
	
	<bean id="autoproxy"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>*Impl</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>
	
	<!-- 事务拦截器,激活事务管理器所必须的bean -->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
</beans>